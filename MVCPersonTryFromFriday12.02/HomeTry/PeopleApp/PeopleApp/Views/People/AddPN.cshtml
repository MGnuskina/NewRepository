@model PeopleService.PersonViewModel

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


<div class="modal-content" id="modalWindow">
    @using (Ajax.BeginForm("AddPN", "People", new AjaxOptions { }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>PersonViewModel</h4>
            <hr />
            @Html.HiddenFor(model=>model.UserID)
            @Html.HiddenFor(model=>model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.phones[Model.phones.Count-1].Number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phones[Model.phones.Count - 1].Number, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phones[Model.phones.Count - 1].Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phones[Model.phones.Count - 1].Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phones[Model.phones.Count - 1].Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phones[Model.phones.Count - 1].Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
