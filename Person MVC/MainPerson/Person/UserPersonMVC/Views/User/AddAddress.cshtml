@model PService.PersonViewModel

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


<div class="modal-content" id="modalWindow">
    @using (Ajax.BeginForm("AddAddress", "User", new AjaxOptions { }))
    {
        <div class="form-horizontal">
            <div class="modal-header">
                <h3>New Address</h3>
            </div>
            <div class="modal-body address_container">
                @Html.HiddenFor(model => model.UserID)
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[0].Street, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[0].Street.Name, new { htmlAttributes = new { @class = "form-control", id = "street" } })
                        @Html.ValidationMessageFor(model => model.Address[0].Street.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[0].BuildingNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[0].BuildingNumber, new { htmlAttributes = new { @class = "form-control", id = "buildingNumber" } })
                        @Html.ValidationMessageFor(model => model.Address[0].BuildingNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[0].FlatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[0].FlatNumber, new { htmlAttributes = new { @class = "form-control", id = "flatNumber" } })
                        @Html.ValidationMessageFor(model => model.Address[0].FlatNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[0].Street.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[0].Street.City.Name, new { htmlAttributes = new { @class = "form-control", id = "city" } })
                        @Html.ValidationMessageFor(model => model.Address[0].Street.City.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[0].Street.City.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[0].Street.City.Country.Name, new { htmlAttributes = new { @class = "form-control", id = "country" } })
                        @Html.ValidationMessageFor(model => model.Address[0].Street.City.Country.Name, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Address[0].lat, htmlAttributes: new { @class = "control-label col-md-2" })
                    <br />
                    @Html.EditorFor(model => model.Address[0].lat, new { htmlAttributes = new { @class = "form-control", id = "lat" } })
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Address[0].lng, htmlAttributes: new { @class = "control-label col-md-2" })
                    <br />
                    @Html.EditorFor(model => model.Address[0].lng, new { htmlAttributes = new { @class = "form-control", id = "lng" } })
                </div>

                <input id="mapButton" type="button" value="See Map" class="btn btn-success center-block" onclick="showMap(@Model.Address[0].lat, @Model.Address[0].lng)" />
                <input id="mapButton" type="button" value="GetFromName" class="btn btn-success center-block" onclick="FindLatLng()" />
                <div id="googleMap" style="width:500px;height:380px;"></div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    }
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/Scripts/Map.js")
        @Scripts.Render("~/Scripts/Functions.js")

    }
